#!/usr/bin/env bash
set -ex
HERE=$(dirname $0)
. $HERE/common

NAME_SERVER=orderly_server
NAME_REDIS=orderly_server_redis
NAME_WORKER=orderly_worker
NAME_NETWORK=orderly_server_network

function cleanup {
  echo "Cleaning up"
  docker kill $NAME_WORKER > /dev/null || true
  docker kill $NAME_SERVER > /dev/null || true
  docker kill $NAME_REDIS > /dev/null || true
  docker network rm $NAME_NETWORK > /dev/null || true
  rm -rf $PACKAGE_ROOT/orderly-demo
}

trap cleanup EXIT

rm -rf orderly-demo

mkdir orderly-demo

docker run --entrypoint create_orderly_demo.sh \
  --env HOME=/tmp \
  --user $(id -u) \
  -v $PACKAGE_ROOT/orderly-demo:/orderly \
  -w /orderly vimc/orderly:master \
  .

mkdir -p $PACKAGE_ROOT/orderly-demo/demo/runner/log
mkdir -p $PACKAGE_ROOT/orderly-demo/demo/runner/id

docker network create $NAME_NETWORK

docker run --rm -d --network=$NAME_NETWORK --network-alias=redis \
    --name $NAME_REDIS redis

docker run --rm -d --network=$NAME_NETWORK \
    -e REDIS_URL=redis://redis:6379 \
    -p 8321:8321 \
    --mount type=bind,src=$PACKAGE_ROOT/orderly-demo/demo,dst=/demo \
    --name $NAME_SERVER $TAG_SHA --backup-period=0 demo

docker run --rm -d --network=$NAME_NETWORK \
    -e REDIS_URL=redis://redis:6379 \
    --mount type=bind,src=$PACKAGE_ROOT/orderly-demo/demo,dst=/demo \
    --entrypoint /usr/local/bin/orderly_worker \
    --name $NAME_WORKER $TAG_SHA

## curl command will error with message
## curl: (56) Recv failure: Connection reset by peer
## if you try to get status before server is ready to
## accept connections. Ideally we would use curl --retry-all-errors
## but this only available in 7.71.0 which is not available
## in standard ubuntu package sources yet
function retry() {
    local -r -i max_attempts="$1"; shift
    local -i attempt_num=1
    until [[ $($@) == "200" ]];
    do
        if ((attempt_num==max_attempts))
        then
            echo "Attempt $attempt_num failed and there are no more attempts left!"
            return 1
        else
            echo "Attempt $attempt_num failed! Trying again in $attempt_num seconds..."
            sleep $((attempt_num++))
        fi
    done
    echo "CONNECTED SUCCESS"
    docker exec $NAME_WORKER test_workers
    exit $?
}

retry 10 curl --silent --write-out "%{http_code}\n" --output /dev/null \
    http://localhost:8321
